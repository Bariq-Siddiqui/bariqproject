{"version":3,"sources":["context/Reducer.jsx","context/Context.jsx","Components/login.jsx","Components/signup.jsx","Components/post.jsx","Components/dasboard.jsx","Components/images/splash.png","Components/splashScreen.jsx","Components/appbar.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["reducer","state","action","type","payload","fullName","email","phone","_id","address","user","console","log","GlobalContext","createContext","data","ContextProvider","children","useReducer","dispatch","Provider","value","baseURL","window","location","hostname","split","validationSchema","yup","required","password","min","max","Login","useContext","formik","useHistory","useFormik","initialValues","onSubmit","values","axios","post","withCredentials","then","res","alert","catch","err","className","Grid","container","spacing","alignItems","textAlign","padding","justifyContent","item","xs","sm","md","lg","style","color","handleSubmit","TextField","fullWidth","id","label","variant","name","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","Signup","history","push","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","RecipeReviewCard","text","timestamp","React","Card","CardHeader","sx","avatar","Avatar","bgcolor","purple","slice","title","subheader","CardContent","Typography","CardActions","disableSpacing","blue","red","Dashboard","useState","posts","setPosts","refresh","setRefresh","isMore","setIsMore","useEffect","get","postText","map","eachPost","i","onClick","length","newPosts","Splash","backgroundColor","width","height","position","bottom","src","img","alt","Appbar","setProfile","e","anchor","left","changestate","setState","toggleDrawer","open","event","key","profile","Box","flexGrow","AppBar","Toolbar","size","edge","mr","Drawer","onClose","role","onKeyDown","List","index","ListItem","button","ListItemIcon","ListItemText","primary","Divider","noWrap","component","display","font","undefined","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d11521e3.chunk.js","sourcesContent":["export const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"USER_LOGIN\": {\r\n        if (\r\n          action.payload.fullName &&\r\n          action.payload.email &&\r\n          action.payload.phone &&\r\n          action.payload._id &&\r\n        //   action.payload.phoneNumber &&\r\n          action.payload.address\r\n        ) {\r\n          return { ...state, user: action.payload };\r\n        } else {\r\n          console.log(`invalid data in USER_LOGIN reducer `);\r\n          return state;\r\n        }\r\n      }\r\n      case \"USER_LOGOUT\": {\r\n        return { ...state, user: null }; // set this to null on purpose, do not change\r\n      }\r\n  \r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n  };","import React, { createContext, useReducer } from \"react\";\r\nimport { reducer } from \"./Reducer\";\r\n\r\nexport const GlobalContext = createContext(\"Initial Value\");\r\nlet data = {\r\n  user: {},\r\n};\r\n\r\nexport default function ContextProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, data);\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}","import * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport './style.css';\r\nimport Grid from '@mui/material/Grid';\r\nimport {useFormik} from 'formik';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport {\r\n    useHistory\r\n} from 'react-router-dom';\r\nimport { GlobalContext } from '../context/Context';\r\nimport { useContext, useReducer } from \"react\";\r\n// import React, { useState } from \"react\";\r\n// import Appbar from \"./appbar\";\r\n\r\nconst dev = 'http://localhost:8000';\r\nconst baseURL = window.location.hostname.split(':')[0] === 'localhost' ? dev : \"\"\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n      .string('Enter your email')\r\n      .email('Enter a valid email')\r\n      .required('Email is required'),\r\n    password: yup\r\n      .string('Enter your password')\r\n      .min(8, 'Password should be of minimum 8 characters length')\r\n      .max(10, 'No more then 10')\r\n      .required('Password is required'),\r\n});\r\n  \r\nfunction Login(){\r\n    let { dispatch } = useContext(GlobalContext);\r\n    let history = useHistory();\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues:{\r\n            email: '',\r\n            password: ''\r\n          },\r\n          onSubmit: onSubmitFunction\r\n    })\r\n    function onSubmitFunction(values){\r\n        axios.post(`${baseURL}/api/v1/login`,{\r\n            email: values.email,\r\n            password: values.password\r\n        }, {\r\n            withCredentials: true\r\n          })\r\n        .then((res)=>{\r\n            if(res){\r\n                console.log(\"res: \", res.data.email)\r\n                console.log(\"res: \", res.data.fullName)\r\n                console.log(\"res: \", res.data.address)\r\n                dispatch({\r\n                  type: \"USER_LOGIN\",\r\n                  payload: {\r\n                    fullName: res.data.fullName,\r\n                    email: res.data.email,\r\n                    phone: res.data.phone,\r\n                    address: res.data.address,\r\n                    _id: res.data._id\r\n                  },\r\n            });    \r\n                alert('login successfull');\r\n                // history.push('/dashboard');\r\n                // history.push('/login');\r\n\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            alert('login unsuccessfull error found');\r\n        })\r\n    }\r\n    return(\r\n        <div className=\"login\">\r\n            <Grid container spacing={2} alignItems=\"center\" textAlign='center' padding='2%' justifyContent=\"center\">\r\n                <Grid item xs={11} sm={10} md={9} lg={8}>\r\n                    <h1 style={{color: \"purple\"}}> LOG IN </h1>\r\n                   <form onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            fullWidth\r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Email\"\r\n                            variant=\"standard\"\r\n                            type = \"email\"\r\n                            name=\"email\"\r\n                            value={formik.values.email}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.email && Boolean(formik.errors.email)}\r\n                            helperText={formik.touched.email && formik.errors.email}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            color=\"secondary\"\r\n                            type=\"password\"\r\n                            id=\"filled-basic\"\r\n                            label=\"Password\"\r\n                            variant=\"standard\"\r\n                            name=\"password\"\r\n                            value={formik.values.password}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.password && Boolean(formik.errors.password)}\r\n                            helperText={formik.touched.password && formik.errors.password}\r\n                        /><br /><br />\r\n                        <Button  variant=\"contained\" color=\"secondary\" type=\"submit\">Log in</Button>\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default Login;","import * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport './style.css';\r\nimport {useFormik} from 'formik';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport {\r\n  useHistory\r\n} from \"react-router-dom\";\r\n\r\nconst dev = 'http://localhost:8000';\r\nconst baseURL = window.location.hostname.split(':')[0] === 'localhost' ? dev : \"\"\r\nconst validationSchema = yup.object({\r\n  fullName: yup\r\n  .string('Enter your Name')\r\n  .min(3, 'Name should be of minimum 3 characters length')\r\n  .max(20, 'No more then 20')  \r\n  .required('Name is required'),\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  phone: yup\r\n    .string('Enter your phone number')\r\n    .min(10, 'Phone should be of minimum 10 length')\r\n    .max(11, 'No more then 11 length')\r\n    .required('Phone number is required'),\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .max(10, 'No more then 10')\r\n    .required('Password is required'),\r\n    address: yup\r\n    .string('Enter your address')\r\n    .min(3, 'Address should be of minimum 3 characters length')\r\n    .max(20, 'No more then 20')  \r\n    .required('Address is required'),\r\n});\r\n\r\nfunction Signup() {\r\n  \r\n  let history = useHistory();\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues:{\r\n      fullName: '',\r\n      email: '',\r\n      phone: '',\r\n      password:'',\r\n      address:''\r\n    },\r\n    onSubmit: onSubmitFunction\r\n  });\r\n  function onSubmitFunction(values){\r\n    axios.post(`${baseURL}/api/v1/signup`,{\r\n      fullName: values.fullName,\r\n      email: values.email,\r\n      phone: values.phone,\r\n      password: values.password,\r\n      address: values.address\r\n    })\r\n    .then(res=>{\r\n      alert('SignUp Successfull');\r\n      history.push('/');\r\n    })\r\n    .catch((err)=>{\r\n      alert('Some thing went wrong please try with different email');\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"signup\">\r\n      <Grid container spacing={2} alignItems=\"center\" textAlign='center' padding='2%' justifyContent=\"center\">\r\n        <Grid item xs={11} sm={10} md={9} lg={8}>\r\n          <h1 style={{color: \"purple\"}}>  SIGN UP </h1>\r\n            <form onSubmit={formik.handleSubmit}>\r\n\r\n              <TextField\r\n                fullWidth\r\n                color=\"secondary\"\r\n                id=\"outlined-basic\"\r\n                label=\"Full Name\"\r\n                variant=\"standard\"\r\n          \r\n                name=\"fullName\"\r\n                value={formik.values.fullName}\r\n                onChange={formik.handleChange}\r\n\r\n                error={formik.touched.fullName && Boolean(formik.errors.fullName)}\r\n                helperText={formik.touched.fullName && formik.errors.fullName}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                color=\"secondary\"\r\n                id=\"outlined-basic\"\r\n                label=\"Email\"\r\n                variant=\"standard\"\r\n                type = \"email\"\r\n                name=\"email\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n\r\n                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                helperText={formik.touched.email && formik.errors.email}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                color=\"secondary\"\r\n                id=\"outlined-basic\"\r\n                label=\"Phone Number\"\r\n                variant=\"standard\"\r\n                type = \"number\"\r\n                name=\"phone\"\r\n                value={formik.values.phone}\r\n                onChange={formik.handleChange}\r\n\r\n                error={formik.touched.phone && Boolean(formik.errors.phone)}\r\n                helperText={formik.touched.phone && formik.errors.phone}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                color=\"secondary\"\r\n                type=\"password\"\r\n                id=\"filled-basic\"\r\n                label=\"Password\"\r\n                variant=\"standard\"\r\n                name=\"password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n           \r\n                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                helperText={formik.touched.password && formik.errors.password}\r\n              >\r\n              </TextField>\r\n              <TextField\r\n                fullWidth\r\n                color=\"secondary\"\r\n                id=\"filled-basic\"\r\n                label=\"Address\"\r\n                variant=\"standard\"\r\n                type=\"address\"\r\n\r\n                name=\"address\"\r\n                value={formik.values.address}\r\n                onChange={formik.handleChange}\r\n\r\n                error={formik.touched.address && Boolean(formik.errors.address)}\r\n                helperText={formik.touched.address && formik.errors.address}\r\n              /> <br /><br />\r\n\r\n              <Button  variant=\"contained\" color=\"secondary\" type=\"submit\">Sign Up</Button>\r\n            </form>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red,purple,blue } from '@mui/material/colors';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { Grid } from '@mui/material';\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\n// import FavoriteIcon from '@mui/icons-material/Favorite';\r\n// import ShareIcon from '@mui/icons-material/Share';\r\n// import EditIcon from '@mui/icons-material/Edit';\r\n// import DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nexport default function RecipeReviewCard(props) {\r\n    const { text, email, fullName, timestamp } = props;\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2} alignItems=\"center\" textAlign='center' padding='2%' justifyContent=\"center\">\r\n        <Grid item xs={11} sm={9} md={7} lg={5}>\r\n        <Card>\r\n            <CardHeader sx={{ textAlign:\"left\"}}\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: purple[500],}} aria-label=\"recipe\">\r\n                        {fullName.slice(0,1)}\r\n                    </Avatar>\r\n                    \r\n                    \r\n                }\r\n                action={\r\n                    <IconButton aria-label=\"settings\">\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                }\r\n                title={fullName}    \r\n                subheader={email}\r\n                \r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign:\"left\"}}>\r\n                    {text}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <IconButton aria-label=\"share\">\r\n                    <ThumbUpIcon sx={{ color: blue[500],}}/>\r\n                </IconButton>\r\n                <IconButton aria-label=\"add to favorites\">\r\n                    <FavoriteIcon sx={{ color: red[500],}}/>\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\">\r\n                    <ShareIcon sx={{ color: blue[500],}}/>\r\n                </IconButton>\r\n            </CardActions>\r\n            \r\n        </Card>\r\n        </Grid>\r\n        </Grid>\r\n    );\r\n}","\r\nimport Stack from '@mui/material/Stack';\r\nimport Post from \"./post\";\r\n\r\n\r\n\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../context/Context\";\r\nimport {useFormik} from 'formik';\r\nimport TextField from '@mui/material/TextField';\r\nimport axios from 'axios';\r\nimport './style.css';\r\nimport { useContext,useState, useEffect } from \"react\"\r\nimport Grid from '@mui/material/Grid';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { red,blue,purple } from '@mui/material/colors';\r\nimport { useRef } from \"react\"\r\n// import { Box } from '@mui/system';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport Avatar from '@mui/material/Avatar';\r\nconst dev = 'http://localhost:8000';\r\nconst baseURL = window.location.hostname.split(':')[0] === 'localhost' ? dev : \"\"\r\n\r\nfunction Dashboard(){\r\n\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [posts, setPosts] = useState([])\r\n    const [refresh, setRefresh] = useState(false)\r\n    const [isMore, setIsMore] = useState(true)\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseURL}/api/v1/posts?page=0`, {\r\n            withCredentials: true\r\n        })\r\n            .then((res) => {\r\n                console.log(\"res +++: \", res.data);\r\n                setPosts(res.data)\r\n            })\r\n    }, [refresh])\r\n\r\n\r\n\r\n\r\n    const loadMore = () => {\r\n        axios.get(`${baseURL}/api/v1/posts?page=${posts.length}`,\r\n            {\r\n                withCredentials: true\r\n            })\r\n            .then((res) => {\r\n                console.log(\"res +++: \", res.data);\r\n                if (res.data?.length) {\r\n                    const newPosts = [...posts, ...res.data]\r\n                    setPosts(newPosts)\r\n                } else {\r\n                    setIsMore(false)\r\n                }\r\n            })\r\n    }\r\n    // const submit = () => {\r\n    //     if (inputText !== \"\") {\r\n    //         axios.post(`${baseURL}/api/v1/post`, {\r\n    //             postText: inputText\r\n    //         }, {\r\n    //             withCredentials: true\r\n    //         })\r\n    //             .then((res) => {\r\n    //                 console.log(\"res: \", res.data);\r\n    //                 setRefresh(!refresh)\r\n    //                 alert(\"post created\");\r\n\r\n    //             })\r\n    //     }\r\n    // }\r\n\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            post: ''\r\n        },\r\n        onSubmit: onSubmitFunction\r\n    })\r\n    function onSubmitFunction(values){\r\n            axios.post(`${baseURL}/api/v1/post`, {\r\n                postText: values.post\r\n            }, {\r\n                withCredentials: true\r\n            })\r\n                .then((res) => {\r\n                    console.log(\"res: \", res.data);\r\n                    setRefresh(!refresh)\r\n                    alert(\"post created\");\r\n\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let { state, dispatch } = useContext(GlobalContext);\r\n    const [profile, setProfile] = useState({})\r\n    // const formik = useFormik({\r\n    //     initialValues:{\r\n    //         post: ''\r\n    //     },\r\n    //     onSubmit: onSubmitFunction\r\n    // })\r\n    // function onSubmitFunction(values){\r\n    //     axios.post(`${baseURL}/api/v1/createpost`,{\r\n    //       post: values.post,\r\n    //       userName:state.user.fullName\r\n    //     })\r\n    //     .then(res=>{\r\n    //       alert('Post Created Successfully');\r\n    //     })\r\n    //     .catch((err)=>{\r\n    //       alert('Some thing went wrong please try with different Post');\r\n    //     })\r\n    // }\r\n\r\n    // const [users, setUsers] = useState([]);\r\n    // useEffect(() => {\r\n    //     axios.get(`${baseURL}/api/v1/dashboard`)\r\n    //     \t.then(res=>{\r\n    //             console.log(res.data)\r\n    //             setUsers(res.data)\r\n    //     });\r\n    // }, []);\r\n    return(\r\n        <div className=\"dashboard\">\r\n            {/* DASHBOARD */}            \r\n            <Grid container spacing={2} alignItems=\"center\" textAlign='center' padding='2%' justifyContent=\"center\">\r\n                <Grid item xs={11} sm={10} md={9} lg={8}>\r\n                    <h1 style={{color: \"purple\"}}> Create New Post </h1>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            fullWidth\r\n                            color=\"secondary\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Post\"\r\n                            variant=\"standard\"\r\n                            type = \"TextField\"\r\n                            name=\"post\"\r\n                            value={formik.values.post}\r\n                            onChange={formik.handleChange}\r\n\r\n                            error={formik.touched.post && Boolean(formik.errors.post)}\r\n                            helperText={formik.touched.post && formik.errors.post}\r\n                        />\r\n                        <br /><br />\r\n                        <Button  variant=\"contained\" color=\"secondary\" type=\"submit\">Post</Button>\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n            {/* {users.map((eachUser,index) => {\r\n                return( \r\n                <>\r\n                    <Grid key={index} container spacing={2} alignItems=\"center\" marginTop='1%' justifyContent=\"center\">\r\n                        <Grid item xs={11} sm={10} md={9} lg={8}>\r\n                            <TableContainer elevation={3} component={Paper}>\r\n                                <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\" colSpan={2} style={{ display: 'flex' , paddingLeft: '5%' }}>\r\n                                            <Avatar sx={{ bgcolor: purple[500] }}>{(eachUser.userName).charAt(0)}</Avatar>\r\n                                            <span style={{ fontSize:\"1.4em\", paddingLeft: '2%',paddingTop: '1%' }}>{eachUser.userName}</span>\r\n                                            \r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell component=\"th\" align=\"left\" scope=\"row\">\r\n                                                {eachUser.post}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                                <Grid>\r\n                                    <ThumbUpIcon sx={{ color: blue[500]}}/><FavoriteIcon sx={{ color: red[600],paddingLeft:'10%' }}/><ShareIcon sx={{ color: blue[600],paddingLeft:'10%' }}/><DeleteIcon sx={{ color: red[600],paddingLeft:'10%' }}/><EditIcon sx={{ color: blue[600],paddingLeft:'10%' }}/>\r\n                                </Grid>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                    </Grid>\r\n                </>\r\n                )\r\n            })} */}\r\n\r\n\r\n<br />\r\n\r\n{posts.map((eachPost,i) => (\r\n    <Post key={i} fullName={eachPost.fullName} email={eachPost.email} text={eachPost.postText} />\r\n))}\r\n\r\n<br />\r\n\r\n{(isMore) ? <Button onClick={loadMore}>Load More</Button> : null}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    //     <div style={{ margin: \"1rem\" }}>\r\n\r\n    //     <h1> Dashboard Page </h1>\r\n\r\n\r\n    //     <Stack spacing={2} direction=\"column\">\r\n\r\n    //         <TextField\r\n    //             id=\"outlined-multiline-static\"\r\n    //             multiline\r\n    //             rows={4}\r\n    //             value={inputText}\r\n    //             onChange={(e) => {\r\n    //                 setInputText(e.target.value)\r\n    //             }}\r\n    //             placeholder=\"What's in your mind\"\r\n    //         /> <br />\r\n    //         <Button variant=\"contained\" onClick={submit}>Post</Button>\r\n\r\n    //     </Stack>\r\n\r\n    //     <br />\r\n\r\n    //     {posts.map((eachPost) => (\r\n    //         <Post name={eachPost.fullName} email={eachPost.email} text={eachPost.postText} />\r\n    //     ))}\r\n\r\n    //     <br />\r\n\r\n    //     {(isMore) ? <Button onClick={loadMore}>Load More</Button> : null}\r\n\r\n    // </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","export default __webpack_public_path__ + \"static/media/splash.257ba1d2.png\";","import img from \"./images/splash.png\";\r\nfunction Splash() {\r\n\r\n    return (\r\n        <>\r\n            <div style={{backgroundColor: \"#181415\", width: \"100%\", height: \"100vh\"}}>\r\n\r\n                <img style={{\r\n                    width: \"100%\",\r\n                    position: \"fixed\",\r\n                    bottom: \"0px\"\r\n                }}\r\n                    src={img} alt=\"\" />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Splash;","import axios from 'axios';\r\n// Drawer\r\nimport * as React from 'react';\r\nimport Drawer from '@mui/material/Drawer';\r\n// import Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n// import InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\n// end drawer\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\n// import Login from './Components/login';\r\nimport Login from './login';\r\n// import Signup from './Components/signup';\r\nimport Signup from './signup';\r\n// import Dashboard from './Components/dasboard';\r\nimport Dashboard from './dasboard';\r\nimport Typography from '@mui/material/Typography';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport { GlobalContext } from './../context/Context';\r\nimport { useContext } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { Redirect } from 'react-router';\r\nimport Splash from \"./splashScreen\";\r\nconst dev = 'http://localhost:8000';\r\n\r\nconst baseURL = window.location.hostname.split(':')[0] === 'localhost' ? dev : \"\"\r\n\r\n\r\nfunction Appbar(){\r\n\r\n  useEffect(() => {\r\n    axios.get(`${baseURL}/api/v1/profile`, {\r\n      withCredentials: true\r\n  })\r\n      .then((res) => {\r\n          console.log(\"res +++: \", res.data);\r\n          setProfile(res.data)\r\n      })\r\n    axios.get(`${baseURL}/api/v1/profile`, {\r\n      withCredentials: true\r\n    })\r\n      .then((res) => {\r\n        console.log(\"res: \", res.data);\r\n\r\n        if (res.data.email) {\r\n\r\n          dispatch({\r\n            type: \"USER_LOGIN\",\r\n            payload: {\r\n              fullName: res.data.fullName,\r\n              email: res.data.email,\r\n              _id: res.data._id\r\n            }\r\n          })\r\n        } else {\r\n          dispatch({ type: \"USER_LOGOUT\" })\r\n        }\r\n      }).catch((e) => {\r\n        dispatch({ type: \"USER_LOGOUT\" })\r\n      })\r\n\r\n    return () => {\r\n    };\r\n    \r\n  }, []);\r\n  // Drawer\r\nconst [changestate, setState] = React.useState({\r\n  left: false\r\n});\r\nconst toggleDrawer = (anchor, open) => (event) => {\r\n  if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n    return;\r\n  }\r\n\r\n  setState({ ...changestate, [anchor]: open });\r\n};\r\nlet history = useHistory();\r\n    // Logout\r\nfunction logout() {\r\n  dispatch({\r\n      type: \"USER_LOGOUT\",\r\n      payload: null\r\n  })\r\n  history.push(\"/login\");\r\n\r\n}\r\nconst list = (anchor) => (\r\n  <Box\r\n    sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 290 }}\r\n    role=\"presentation\"\r\n    onClick={toggleDrawer(anchor, false)}\r\n    onKeyDown={toggleDrawer(anchor, false)}\r\n  >\r\n    <List>\r\n      {[profile.fullName, profile.email,profile.phone, profile.address].map((text, index) => (\r\n        <ListItem button key={index}>\r\n          <ListItemIcon>\r\n            {\r\n            // (index % 2 === 0) ? <PersonIcon /> : <MailIcon />\r\n            index * 2 === 0 ? <PersonIcon /> : index * 2 === 2 ? <MailIcon /> : index * 2 === 4 ? <LocalPhoneIcon />:<HomeIcon/>}\r\n          </ListItemIcon>\r\n          <ListItemText primary={text} />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n    <Divider />\r\n    <List>\r\n      {['Logout'].map((text, index) => (\r\n        <ListItem button key={text} onClick={() => {\r\n          axios.post(`${baseURL}/api/v1/logout`,{}, {\r\n              withCredentials: true\r\n          })\r\n              .then((res) => {\r\n                  console.log(\"res +++: \", res.data);\r\n\r\n                  dispatch({\r\n                      type: \"USER_LOGOUT\"\r\n                  })\r\n              })\r\n      }} >\r\n          <ListItemIcon>\r\n            <LogoutIcon/> \r\n          </ListItemIcon>\r\n          <ListItemText primary={text} />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  </Box>\r\n);\r\n// Drawer End\r\n  let { state, dispatch } = useContext(GlobalContext);\r\n  const [profile, setProfile] = useState({})\r\n  return(\r\n      <div className=\"Appbar\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\" color='secondary'>\r\n          <Toolbar>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              sx={{ mr: 2 }}\r\n            >\r\n            {(state.user) ?\r\n          <React.Fragment>\r\n          <MenuIcon onClick={toggleDrawer('left', true)}/>\r\n          <Drawer\r\n            anchor={'left'}\r\n            open={changestate['left']}\r\n            onClose={toggleDrawer('left', false)}\r\n          >\r\n            {list('left')}\r\n          </Drawer>\r\n        </React.Fragment>\r\n            \r\n            :\r\n          <MenuIcon/>\r\n            }\r\n\r\n\r\n            {/* {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <MenuIcon onClick={toggleDrawer(anchor, true)}/>\r\n          <Drawer\r\n            anchor={anchor}\r\n            open={changestate[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n          >\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))} */}\r\n        \r\n  \r\n\r\n            </IconButton>\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"div\"\r\n              sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\r\n            >\r\n              Project\r\n            </Typography>\r\n            {/* <Button color=\"inherit\" onClick={()=> {history.push('/') }}>Splash </Button> */}\r\n            <Button color=\"inherit\" onClick={()=> {history.push('/') }}>Dashboard</Button>\r\n            <Button color=\"inherit\" onClick={()=> {history.push('/signup')} }>Signup</Button>\r\n            <AccountCircleIcon style={{font:'2rem'}} onClick={()=> {history.push('/') }}/>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n      {/* <Switch>\r\n        <Route path=\"/signup\">\r\n          <Signup/>\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/dashboard\">\r\n          <Dashboard />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Signup />\r\n        </Route>\r\n      </Switch> */}\r\n\r\n      {/* {(state.user) ?\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Dashboard />\r\n          </Route>\r\n\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      :\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/signup\" component={Signup} />\r\n  \r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      } */}\r\n\r\n\r\n{(state.user === undefined) ?\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Splash />\r\n          </Route>\r\n        </Switch>\r\n        : null}\r\n\r\n      {(state.user === null) ?\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/signup\" component={Signup} />\r\n\r\n        </Switch> : null\r\n      }\r\n\r\n      {(state.user) ?\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Dashboard />\r\n          </Route>\r\n        </Switch>\r\n        : null}\r\n    </div>\r\n  )\r\n}\r\nexport default Appbar;","import Appbar from './Components/appbar';\r\nimport React from \"react\";\r\nfunction App(){\r\n  \r\n    return(\r\n      <div className=\"App\">\r\n      <Appbar/>\r\n    </div>\r\n  )\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\nimport ContextProvider from './context/Context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContextProvider>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </ContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}